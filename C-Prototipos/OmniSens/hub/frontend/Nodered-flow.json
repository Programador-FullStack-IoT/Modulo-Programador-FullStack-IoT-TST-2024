[
    {
        "id": "4ba25265ccfd5bef",
        "type": "tab",
        "label": "Test Vista",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "50bdc914e921a9bc",
        "type": "mqtt in",
        "z": "4ba25265ccfd5bef",
        "name": "MQTT Input",
        "topic": "omnisens/datos/AQC_001",
        "qos": "1",
        "datatype": "auto-detect",
        "broker": "mqtt_broker",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 110,
        "y": 200,
        "wires": [
            [
                "d3e07d6b64a66ba3",
                "888ee7103ec33562"
            ]
        ]
    },
    {
        "id": "1d55eb76f69f6745",
        "type": "ui_gauge",
        "z": "4ba25265ccfd5bef",
        "name": "",
        "group": "d87413d0f61f55dc",
        "order": 2,
        "width": "4",
        "height": "3",
        "gtype": "gage",
        "title": "Temperatura 1",
        "label": "°C",
        "format": "{{msg.aht_temp}}",
        "min": "-20",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "25",
        "seg2": "50",
        "diff": false,
        "className": "",
        "x": 1160,
        "y": 91.53846153846152,
        "wires": []
    },
    {
        "id": "d3e07d6b64a66ba3",
        "type": "function",
        "z": "4ba25265ccfd5bef",
        "name": "function 1",
        "func": "// Verificar si el payload es una cadena; de ser así, intentar parsearla a JSON.\nlet original = msg.payload;\nif (typeof original === 'string') {\n    try {\n        original = JSON.parse(original);\n    } catch (e) {\n        node.error(\"No se pudo parsear el JSON: \" + e, msg);\n        return null;\n    }\n}\n\n// Obtener la fecha actual con formato sueco (AAAA-MM-DD HH:mm:ss)\nconst fecha_actual = new Date().toLocaleString('sv-SE', {\n    timeZone: 'America/Argentina/Cordoba'\n});\n\n// Extraer propiedades de nivel superior\nmsg.deviceId  = original.ID;\nmsg.timestamp = fecha_actual;\n//msg.token     = original.token;\n\n// Extraer datos de sensores y también asignarlos directamente a msg para facilitar el acceso\n//if (original.sensores) {\n    msg.mq135     = original.g;\n    msg.bmp_temp  = original.tB;\n    msg.bmp_pres  = original.p;\n    msg.aht_temp  = original.tA;\n    msg.aht_hum   = original.h;\n    msg.luz       = original.l;\n//msg.uv        = original.sensores.uv;\n//}\n\n// Extraer datos de actuadores\nif (original.actuadores) {\n    \n    msg.rele1  = original.r1;\n    msg.rele2  = original.r2;\n    msg.pwm    = original.pwm;\n}\n\n// Extraer datos de alarmas\n//if (original.alarmas) {\n//    msg.gas           = original.alarmas.gas;\n//    msg.codigoAlarma  = original.alarmas.codigoAlarma;\n//}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 200,
        "wires": [
            [
                "1d55eb76f69f6745",
                "0e55fad55060e467",
                "9b82b8d5b34bb833",
                "79a8269ec9290455",
                "1b1cdb1af9b73e2f",
                "bbf13f36c41dfc37",
                "f44475d7ac900db6",
                "752d91fe7541f99f",
                "cc98cbcc604cc6af",
                "a07849dd57601235",
                "54c5c68ede4e1a7f",
                "6b21f4220362f00c",
                "e1700f78a2a3c37d",
                "be982fde5dc9cb36",
                "0bc30780c51cdc52",
                "f4d383318950a1cd",
                "b0b4757b2d6d4a71",
                "8744f6bf0026ee9b",
                "8766b3357ee2112b"
            ]
        ]
    },
    {
        "id": "0e55fad55060e467",
        "type": "ui_gauge",
        "z": "4ba25265ccfd5bef",
        "name": "",
        "group": "d87413d0f61f55dc",
        "order": 4,
        "width": "4",
        "height": "3",
        "gtype": "wave",
        "title": "Humedad relativa",
        "label": "%",
        "format": "{{msg.aht_hum}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1170,
        "y": 163.07692307692307,
        "wires": []
    },
    {
        "id": "9b82b8d5b34bb833",
        "type": "ui_gauge",
        "z": "4ba25265ccfd5bef",
        "name": "",
        "group": "d87413d0f61f55dc",
        "order": 3,
        "width": "4",
        "height": "3",
        "gtype": "gage",
        "title": "Temperatura 2",
        "label": "°C",
        "format": "{{msg.bmp_temp}}",
        "min": "-20",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1160,
        "y": 198.84615384615384,
        "wires": []
    },
    {
        "id": "79a8269ec9290455",
        "type": "ui_gauge",
        "z": "4ba25265ccfd5bef",
        "name": "",
        "group": "d87413d0f61f55dc",
        "order": 5,
        "width": "4",
        "height": "3",
        "gtype": "gage",
        "title": "Presion atm",
        "label": "hpas?",
        "format": "{{msg.bmp_pres}}",
        "min": "300",
        "max": "2500",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1150,
        "y": 234.61538461538458,
        "wires": []
    },
    {
        "id": "1b1cdb1af9b73e2f",
        "type": "ui_gauge",
        "z": "4ba25265ccfd5bef",
        "name": "",
        "group": "d87413d0f61f55dc",
        "order": 7,
        "width": "4",
        "height": "3",
        "gtype": "gage",
        "title": "luz",
        "label": "lx",
        "format": "{{msg.luz}}",
        "min": 0,
        "max": "5000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1130,
        "y": 270.38461538461536,
        "wires": []
    },
    {
        "id": "bbf13f36c41dfc37",
        "type": "ui_text",
        "z": "4ba25265ccfd5bef",
        "group": "90809e940d615866",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Gas",
        "format": "{{msg.gas}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1130,
        "y": 500,
        "wires": []
    },
    {
        "id": "f44475d7ac900db6",
        "type": "ui_text",
        "z": "4ba25265ccfd5bef",
        "group": "90809e940d615866",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Codigo de Alarma",
        "format": "{{msg.codigoAlarma}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1170,
        "y": 377.6923076923077,
        "wires": []
    },
    {
        "id": "752d91fe7541f99f",
        "type": "ui_text",
        "z": "4ba25265ccfd5bef",
        "group": "19be14fe137c90c6",
        "order": 1,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "Hora",
        "format": "{{msg.timestamp}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1130,
        "y": 55.76923076923076,
        "wires": []
    },
    {
        "id": "cc98cbcc604cc6af",
        "type": "ui_text",
        "z": "4ba25265ccfd5bef",
        "group": "19be14fe137c90c6",
        "order": 2,
        "width": "0",
        "height": "0",
        "name": "",
        "label": "ID",
        "format": "{{msg.deviceId}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1130,
        "y": 20,
        "wires": []
    },
    {
        "id": "a07849dd57601235",
        "type": "ui_gauge",
        "z": "4ba25265ccfd5bef",
        "name": "",
        "group": "f2f70d3d4e42118c",
        "order": 5,
        "width": "4",
        "height": "3",
        "gtype": "gage",
        "title": "PWM",
        "label": "units",
        "format": "{{msg.pwm}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1130,
        "y": 341.9230769230769,
        "wires": []
    },
    {
        "id": "54c5c68ede4e1a7f",
        "type": "ui_text",
        "z": "4ba25265ccfd5bef",
        "group": "f2f70d3d4e42118c",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Rele1",
        "format": "{{msg.rele1}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1130,
        "y": 413.46153846153845,
        "wires": []
    },
    {
        "id": "6b21f4220362f00c",
        "type": "ui_text",
        "z": "4ba25265ccfd5bef",
        "group": "f2f70d3d4e42118c",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Rele2",
        "format": "{{msg.rele2}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1130,
        "y": 449.23076923076917,
        "wires": []
    },
    {
        "id": "7d61443625ade8e9",
        "type": "mqtt out",
        "z": "4ba25265ccfd5bef",
        "name": "",
        "topic": "aqi/actuadores",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "mqtt_broker",
        "x": 1380,
        "y": 720,
        "wires": []
    },
    {
        "id": "e1700f78a2a3c37d",
        "type": "ui_slider",
        "z": "4ba25265ccfd5bef",
        "name": "",
        "label": "pwm",
        "tooltip": "",
        "group": "f2f70d3d4e42118c",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "end",
        "topic": "pwm",
        "topicType": "str",
        "min": 0,
        "max": "100",
        "step": 1,
        "className": "",
        "x": 490,
        "y": 1120,
        "wires": [
            [
                "4b12bbea3e1dd765"
            ]
        ]
    },
    {
        "id": "be982fde5dc9cb36",
        "type": "ui_switch",
        "z": "4ba25265ccfd5bef",
        "name": "",
        "label": "Rele1 act",
        "tooltip": "",
        "group": "f2f70d3d4e42118c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "r1",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 500,
        "y": 1000,
        "wires": [
            [
                "d234bb066be15079"
            ]
        ]
    },
    {
        "id": "0bc30780c51cdc52",
        "type": "ui_switch",
        "z": "4ba25265ccfd5bef",
        "name": "",
        "label": "Rele 2 act",
        "tooltip": "",
        "group": "f2f70d3d4e42118c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "r2",
        "topicType": "str",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 500,
        "y": 1060,
        "wires": [
            [
                "8178323e55e6f682"
            ]
        ]
    },
    {
        "id": "70278b7f08b1b4ea",
        "type": "mysql",
        "z": "4ba25265ccfd5bef",
        "mydb": "3c161c0d8d55d2f7",
        "name": "Insertar actuator_status",
        "x": 1210,
        "y": 600,
        "wires": [
            [
                "d645d49ec6fc72d1"
            ]
        ]
    },
    {
        "id": "d645d49ec6fc72d1",
        "type": "debug",
        "z": "4ba25265ccfd5bef",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1420,
        "y": 600,
        "wires": []
    },
    {
        "id": "f4d383318950a1cd",
        "type": "ui_gauge",
        "z": "4ba25265ccfd5bef",
        "d": true,
        "name": "",
        "group": "",
        "order": 6,
        "width": "2",
        "height": "2",
        "gtype": "donut",
        "title": "UV",
        "label": "uv",
        "format": "{{msg.uv}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00ff1e",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1130,
        "y": 127.30769230769229,
        "wires": []
    },
    {
        "id": "b0b4757b2d6d4a71",
        "type": "ui_gauge",
        "z": "4ba25265ccfd5bef",
        "name": "",
        "group": "d87413d0f61f55dc",
        "order": 8,
        "width": "3",
        "height": "3",
        "gtype": "gage",
        "title": "Gases",
        "label": "PPM",
        "format": "{{msg.mq135}}",
        "min": 0,
        "max": "1000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1130,
        "y": 306,
        "wires": []
    },
    {
        "id": "8744f6bf0026ee9b",
        "type": "function",
        "z": "4ba25265ccfd5bef",
        "name": "function 2",
        "func": "let humedad = msg.aht_hum;\nlet gas = msg.mq135;\nlet luz = msg.luz;\n\nlet pwm = 0;\nlet rele1 = false;\nlet rele2 = false;\n\nif (humedad > 60) {\n    pwm = 50;\n    rele1 = true;\n}\nif (gas > 500) {\n    pwm = 100;\n}\nif (luz < 200) {\n    rele2 = true;\n}\n\nlet comando = {\n    \"id\": msg.deviceId || \"AQC_001\", // Usar deviceId del mensaje o un default\n    \"o\": {\n        \"pwm\": pwm,\n        \"r1\": rele1,\n        \"r2\": rele2,\n        \"cA\": 0 // Código de alarma, puedes ajustarlo si es necesario\n    }\n};\n\n// El payload del mensaje para el nodo MQTT out debe ser el JSON del comando\nmsg.payload = comando; // **CAMBIO IMPORTANTE: ya no se hace JSON.stringify aquí**\nmsg.topic = \"omnisens/comandos/\" + (msg.deviceId || \"AQC_001\"); // Definir el tópico de salida\n\nmsg.payload = JSON.stringify(comando);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 720,
        "wires": [
            [
                "a9ba64cf1346fe88",
                "02a66e5f6c6810fc"
            ]
        ]
    },
    {
        "id": "a9ba64cf1346fe88",
        "type": "mqtt out",
        "z": "4ba25265ccfd5bef",
        "name": "Comandos MQTT Out (Automático)",
        "topic": "omnisens/comandos/AQC_001",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "mqtt_broker",
        "x": 1040,
        "y": 720,
        "wires": []
    },
    {
        "id": "8766b3357ee2112b",
        "type": "function",
        "z": "4ba25265ccfd5bef",
        "name": "Generar SQL Actuator_status",
        "func": "let query = `\nINSERT INTO actuator_status (\n  \\`device_id\\`, \\`timestamp\\`, \\`rele1_status\\`, \\`rele2_status\\`, \\`pwm_value\\`\n) VALUES (\n  '${msg.deviceId}',\n  '${msg.timestamp}',\n  ${msg.rele1 || '0'},\n  ${msg.rele2 || '0'},\n  ${msg.pwm || 'NULL'}\n);`;\n\nmsg.topic = query;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 600,
        "wires": [
            [
                "70278b7f08b1b4ea"
            ]
        ]
    },
    {
        "id": "888ee7103ec33562",
        "type": "debug",
        "z": "4ba25265ccfd5bef",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 100,
        "wires": []
    },
    {
        "id": "02a66e5f6c6810fc",
        "type": "function",
        "z": "4ba25265ccfd5bef",
        "name": "Generar SQL commands_logs",
        "func": "let query = `\nINSERT INTO commands_log (\n  \\`device_id\\`, \\`timestamp\\`, \\`rele_1_command\\`, \\`rele_2_command\\`, \\`pwm_command\\`) VALUES (\n  '${msg.deviceId}',\n  '${msg.timestamp}',\n  ${msg.rele1 || 'NULL'},\n  ${msg.rele2 || 'NULL'},\n  ${msg.pwm || 'NULL'}\n);`;\n\nmsg.topic = query;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 880,
        "wires": [
            [
                "b749548b586eeb82"
            ]
        ]
    },
    {
        "id": "b749548b586eeb82",
        "type": "mysql",
        "z": "4ba25265ccfd5bef",
        "mydb": "3c161c0d8d55d2f7",
        "name": "Insertar commands_log",
        "x": 1230,
        "y": 880,
        "wires": [
            [
                "b3e7376bdf2cf194"
            ]
        ]
    },
    {
        "id": "b3e7376bdf2cf194",
        "type": "debug",
        "z": "4ba25265ccfd5bef",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 880,
        "wires": []
    },
    {
        "id": "4b12bbea3e1dd765",
        "type": "function",
        "z": "4ba25265ccfd5bef",
        "name": "function pwm",
        "func": "// El payload del ui_slider ya es el valor numérico del PWM\nlet deviceId = \"AQC_001\"; // Si msg.deviceId viniera del slider (poco probable), úsalo aquí. Por ahora, un ID fijo.\n\nlet comando = {\n    \"id\": deviceId,\n    \"o\": {\n        \"pwm\": msg.payload // msg.payload es el valor del slider (0-100)\n    }\n};\n\nmsg.payload = JSON.stringify(comando); // Convertir el objeto JSON a una cadena\nmsg.topic = \"omnisens/comandos/\" + deviceId; // Definir el tópico MQTT de salida\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1120,
        "wires": [
            [
                "5b0b80e373f1bca3"
            ]
        ]
    },
    {
        "id": "8178323e55e6f682",
        "type": "function",
        "z": "4ba25265ccfd5bef",
        "name": "function R2",
        "func": "// El payload del ui_switch ya es el valor booleano (true/false) para el relé\nlet deviceId = \"AQC_001\";\n\nlet comando = {\n    \"id\": deviceId,\n    \"o\": {\n        \"r2\": msg.payload // msg.payload es true/false\n    }\n};\n\nmsg.payload = JSON.stringify(comando);\nmsg.topic = \"omnisens/comandos/\" + deviceId;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1060,
        "wires": [
            [
                "5b0b80e373f1bca3"
            ]
        ]
    },
    {
        "id": "d234bb066be15079",
        "type": "function",
        "z": "4ba25265ccfd5bef",
        "name": "function R1",
        "func": "// El payload del ui_switch ya es el valor booleano (true/false) para el relé\nlet deviceId = \"AQC_001\"; \n\nlet comando = {\n    \"id\": deviceId,\n    \"o\": {\n        \"r1\": msg.payload // msg.payload es true/false\n    }\n};\n\nmsg.payload = JSON.stringify(comando);\nmsg.topic = \"omnisens/comandos/\" + deviceId;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 1000,
        "wires": [
            [
                "5b0b80e373f1bca3",
                "70fe0aec5f8164b0"
            ]
        ]
    },
    {
        "id": "5b0b80e373f1bca3",
        "type": "mqtt out",
        "z": "4ba25265ccfd5bef",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "mqtt_broker",
        "x": 970,
        "y": 1060,
        "wires": []
    },
    {
        "id": "70fe0aec5f8164b0",
        "type": "debug",
        "z": "4ba25265ccfd5bef",
        "name": "debug funcion r1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 1000,
        "wires": []
    },
    {
        "id": "a8bc9097a4f13b47",
        "type": "ui_spacer",
        "z": "4ba25265ccfd5bef",
        "name": "spacer",
        "group": "d87413d0f61f55dc",
        "order": 8,
        "width": "14",
        "height": "1"
    },
    {
        "id": "45e6db26132bc74f",
        "type": "ui_spacer",
        "z": "4ba25265ccfd5bef",
        "name": "spacer",
        "group": "d87413d0f61f55dc",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "mqtt_broker",
        "type": "mqtt-broker",
        "name": "MQTT remoto",
        "broker": "172.20.0.5",
        "port": "1883",
        "tls": "",
        "clientid": "Plata_NODERED",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "3",
        "keepalive": "300",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "d87413d0f61f55dc",
        "type": "ui_group",
        "name": "Sensores",
        "tab": "2bba298a5fb1fcbe",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": true,
        "className": ""
    },
    {
        "id": "90809e940d615866",
        "type": "ui_group",
        "name": "Alarmas",
        "tab": "2bba298a5fb1fcbe",
        "order": 3,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "19be14fe137c90c6",
        "type": "ui_group",
        "name": "Elegir Dispositivo",
        "tab": "2bba298a5fb1fcbe",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f2f70d3d4e42118c",
        "type": "ui_group",
        "name": "Actuadores",
        "tab": "2bba298a5fb1fcbe",
        "order": 4,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "3c161c0d8d55d2f7",
        "type": "MySQLdatabase",
        "name": "DB OmniSens",
        "host": "172.20.0.6",
        "port": "3306",
        "db": "OmniSens",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "2bba298a5fb1fcbe",
        "type": "ui_tab",
        "name": "MQTT Viewer",
        "icon": "send",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]
